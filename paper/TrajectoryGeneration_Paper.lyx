#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass ieeeconf
\begin_preamble

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Written by   Layne Clemen and Cory Rupp                            %
%              ATA Engineering                                       %
%              San Diego, CA 92128                                   %
%              WWW:   www.ata-e.com                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\IEEEoverridecommandlockouts
\overrideIEEEmargins

%%%%%%%%%%%%%%%%%%%%%%%%%% Packages %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{pgfplots}
\usepgfplotslibrary{groupplots}
\pgfplotsset{
%	compat=1.3,
	tick label style={font=\small},
	label style={font=\small},
	height=0.4*\columnwidth, 
	width=\columnwidth
}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{tikz}
\usetikzlibrary{3d,
				calc,
				shapes,
 				decorations.pathmorphing}

%\usepackage{circuitikz}
%\usepackage{bondgraph}

%\usepackage{tablefootnote}
\newtheorem{remark}{Remark}


\title{\LARGE \bf
Single- and Multi-Degree of Freedom Servo Trajectory Generation: An
Optimization Framework, Implementation, and Examples
}
\author{Layne Clemen$^{1}$ and Cory J. Rupp$^{2,*}$%
\thanks{$^{1}$Elexity, Bend, OR, USA
	{\tt\small layne@elexity.io}}%
\thanks{$^{2}$ATA Engineering, Inc., Lakewood, CO, USA
	{\tt\small cory.rupp@ata-e.com}}%
\thanks{$^{*}$Corresponding author}%
}
\end_preamble
\options letterpaper,conference
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 2
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style IEEEtran
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Single-axis motion profiles are typically generated by an engineer through
 adjusting acceleration, jerk, and velocities at the bounds of system specificat
ions to find a trajectory that meets the system performance requirements.
 This is an often trite task that does not allow many secondary system performan
ce options such as energy usage to be considered.
 In multi-degree of freedom systems, secondary considerations are typically
 brushed aside even more as the task complexity requires more focus on the
 coordinate motion of multiple stages.
 This paper presents an optimization framework to generate optimal trajectories
 offline for single- and multi-axis systems based entirely on basic kinematic
 relationships.
 The framework, implemented in the Python package Pyomo, consists of setting
 a minimization target and appropriate norm in conjunction of a set of operation
al constraints.
 Trajectory generation results for minimal power, jerk, acceleration, and
 velocity considerations using 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

, 
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

, and 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norms are compared.
 A nonlinear optimization scheme to minimize move time is also examined.
 Results show that trapezoidal/S-curve profiles embody minimization of velocity
 norms as well as move time, while other optimal profiles can be utilized
 in cases where system specifications require different performance options.
 Normalized peak power and total system energy cost functions are also developed.
 This paper provides practicing engineers with an easily implementable tool
 to facilitate system component selection and performance optimization.
\end_layout

\begin_layout Section
INTRODUCTION
\begin_inset CommandInset label
LatexCommand label
name "sec:Introduction"

\end_inset


\end_layout

\begin_layout Standard
Trajectory generation is a well studied area with extensive literature describin
g solutions for a myriad of applications
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "kroger2010literature, rao2014trajectory"
literal "false"

\end_inset

.
 Many applications consider multiple degree of freedom systems such as robotic
 arms
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "kroger2010literature"
literal "false"

\end_inset

 and multi-axis machines
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "erkorkmaz2004optimal"
literal "false"

\end_inset

, typically utilizing offline or online optimization techniques with the
 dynamics of the actuators and controlled system as constraints.
 An often overlooked application is trajectory generation for 1-dimensional
 motion control systems such as basic linear motion stages.
 There have been some recent developments for these simpler systems but
 not much that is readily usable by the practicing engineering community
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wang2014real"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
Two types of movement profiles are typically implemented in commercial of
 the shelf (COTS) motor controllers: a trapezoidal profile or an S-curve.
 Parameters for these profiles are commonly generated online by tweaking
 the motion parameters until the engineer achieves acceptable performance,
 usually focusing on one aspect (e.g., velocity or acceleration) while disregardin
g other factors.
 While these profiles work well for general applications, there exists a
 need to optimize systems for additional performance metrics such as reducing
 controller and mechanical energy usage and wear.
 Trajectory generation for multi-degree for freedom platforms rarely considers
 such secondary as energy usage, although their application are equally
 needed.
\end_layout

\begin_layout Standard
This paper presents a simple offline framework to generate motion trajectories
 optimized under various performance objectives.
 This framework casts trajectory generation as a continuous optimization
 problem with constraints relating the kinematics of the system.
 The theoretical development is implemented in Pyomo
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "hart2017pyomo"
literal "false"

\end_inset

, an algebraic modeling language (AML) package for Python.
 Results show that trapezoidal/S-curves embody trajectories that minimize
 of velocity norms or move duration.
 Other cost functions and their implementations are presented that can be
 utilized in cases where system specifications require different performance
 options.
 Extension to multi degree of freedom trajectory optimization is straightforward
 and a simple application is demonstrated using the framework.
\end_layout

\begin_layout Standard
This paper is organized as follows, Section 2 presents a basic problem formulati
on around a generic cost function with kinematic constraints.
 Section 3 discusses implementation in the Pyomo package.
 Section 4 discusses the results of studies of a single axis system, including
 exploration of a multi-objective formulation.
 In section 5, the framework is extended to a two-degree of freedom system
 and demonstrated with an example.
 Section 6 discusses conclusions and future extensions of the work.
\end_layout

\begin_layout Section
PROBLEM FORMULATION
\begin_inset CommandInset label
LatexCommand label
name "sec:ProblemFormulation"

\end_inset


\end_layout

\begin_layout Standard
Trajectory motion consists of multiple kinematic variables, including displaceme
nt 
\begin_inset Formula $d$
\end_inset

, velocity 
\begin_inset Formula $v$
\end_inset

, acceleration 
\begin_inset Formula $a$
\end_inset

, and jerk 
\begin_inset Formula $j$
\end_inset

, all as a function of time and related through the kinematic equations
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\begin{split}\dot{d} & =v\\
\dot{v} & =a\\
\dot{a} & =j
\end{split}
\label{eq:dynamics}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These variables are typically subject to a variety of constraints on their
 possible values
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\begin{split}\underline{v}\leq v\leq\overline{v}\\
\underline{a}\leq a\leq\overline{a}\\
\underline{j}\leq j\leq\overline{j}
\end{split}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
where upper 
\begin_inset Formula $\overline{\APLbox}$
\end_inset

 and lower 
\begin_inset Formula $\underline{\APLbox}$
\end_inset

 limits are determined through electromechanical system requirements and
 specifications.
 The trajectory optimization problem can be formulated as a standard optimizatio
n
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "nocedal2006numerical"
literal "false"

\end_inset

 of the form: 
\begin_inset Formula 
\begin{align}
\begin{split} & \min\limits _{\mathbf{x}}\;J\\
s.t.\quad & \mathbf{Ax}=\mathbf{b}\\
 & \mathbf{Hx}\leq\mathbf{k}
\end{split}
\label{eq:optStatement}
\end{align}

\end_inset

where 
\begin_inset Formula $J$
\end_inset

 is the cost or objective function, 
\begin_inset Formula $\mathbf{x}$
\end_inset

 is the vector of decision variables, and 
\begin_inset Formula $\mathbf{A}$
\end_inset

, 
\begin_inset Formula $\mathbf{b}$
\end_inset

, 
\begin_inset Formula $\mathbf{H}$
\end_inset

, and 
\begin_inset Formula $\mathbf{k}$
\end_inset

 are appropriately sized matrices and vectors describing the problem constraints.
 The kinematic motion of the system 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dynamics"
plural "false"
caps "false"
noprefix "false"

\end_inset

 can be discretized and used as constraint equations between the decision
 variables:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\begin{split}d_{k+1}=d_{k}+v_{k}\Delta t\\
v_{k+1}=v_{k}+a_{k}\Delta t\\
a_{k+1}=a_{k}+j_{k}\Delta t
\end{split}
\label{eq:kinematicConstraints}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
These constraints, the decision variable box constraints, and boundary condition
s for a motion starting and stopping at rest
\begin_inset Foot
status open

\begin_layout Plain Layout
Different boundary conditions can be used without loss of generality.
\end_layout

\end_inset

 can be used to formulate the optimization problem as: 
\begin_inset Formula 
\begin{align}
\begin{array}{rl}
 & \min\limits _{\mathbf{x}}\;J\\
\begin{array}{l}
s.t.\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\\
\end{array} & \left.\begin{array}{l}
x_{0}=0\\
v_{0}=0\\
a_{0}=0\\
d_{k+1}=d_{k}+v_{k}\Delta t\\
v_{k+1}=v_{k}+a_{k}\Delta t\\
a_{k+1}=a_{k}+j_{k}\Delta t\\
d_{N}=D\\
v_{N}=0\\
a_{N}=0\\
0\leq v_{k}\leq\overline{v}\\
\underline{a}\leq a_{k}\leq\overline{a}\\
\underline{j}\leq j_{k}\leq\overline{j}
\end{array}\right\} \mathcal{C}
\end{array}\label{eq:baseProgram}
\end{align}

\end_inset

where 
\begin_inset Formula $D$
\end_inset

 is the total distance to move, 
\begin_inset Formula $\Delta t$
\end_inset

 is the discretization period, and 
\begin_inset Formula $\mathcal{C}$
\end_inset

 is the entire set of constraints for the problem.
 The kinematic variables are discretized into 
\begin_inset Formula $k\in\left[1,\;2,\;\ldots\;,\;N-1,\;N\right]$
\end_inset

 indexes totaling 
\begin_inset Formula $N$
\end_inset

 segments, where 
\begin_inset Formula 
\begin{equation}
N=\dfrac{t_{f}}{\Delta t}
\end{equation}

\end_inset

Depending on the cost function, the decision variables 
\begin_inset Formula $\mathbf{x}$
\end_inset

 will consist of either the kinematic variables
\begin_inset Foot
status open

\begin_layout Plain Layout
The variables here represent a linear mechanical system but can be changed
 to any energy domain without loss of generality
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "karnopp2012system"
literal "false"

\end_inset

.
\end_layout

\end_inset

 
\begin_inset Formula $\mathbf{d}$
\end_inset

, 
\begin_inset Formula $\mathbf{v}$
\end_inset

, 
\begin_inset Formula $\mathbf{a}$
\end_inset

, 
\begin_inset Formula $\mathbf{j}$
\end_inset

 or the total move time 
\begin_inset Formula $t_{f}$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Minimizing Kinematic Variables
\end_layout

\begin_layout Standard
The cost function when using kinematic variables is formulated in terms
 of 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

, 
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

, or 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norms of the vectors of the decision variables.
 These norms represent various aspects of the profile performance, they
 are
\begin_inset Foot
status open

\begin_layout Plain Layout
The 2-norm only varies from the RMS value by a constant of 
\begin_inset Formula $1/\sqrt{n}$
\end_inset

 and therefore behaves the same under optimization.
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="right" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\mathbf{x}\|_{1}=\sum\limits _{i=1}^{n}|x_{i}|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(Absolute or Taxicab Norm)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\mathbf{x}\|_{2}=\left(\sum\limits _{i=1}^{n}x_{i}^{2}\right)^{1/2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(RMS or Euclidean Norm)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\mathbf{x}\|_{\infty}=\max\limits _{1\leq i\leq n}|x_{i}|$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(Peak or Inifinty Norm)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Minimizing Power and Energy
\end_layout

\begin_layout Standard
For a linear mechanical system with a constant mass, the power that the
 load experiences is
\begin_inset Formula 
\begin{equation}
P_{k}=F_{k}v_{k}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $F_{k}$
\end_inset

 is the force on the system at step 
\begin_inset Formula $k$
\end_inset

.
 The time-vector of forces, acceleration, and velocity are 
\begin_inset Formula 
\begin{align}
\begin{split}\mathbf{F} & =\left[F_{1},F_{2},\ldots,F_{N}\right]^{T}\\
\mathbf{a} & =\left[a_{1},a_{2},\ldots,a_{N}\right]^{T}\\
\mathbf{v} & =\left[v_{1},v_{2},\ldots,v_{N}\right]^{T}
\end{split}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
From Newton's 2
\begin_inset script superscript

\begin_layout Plain Layout
nd
\end_layout

\end_inset

 law 
\begin_inset Formula $\mathbf{F}=m\mathbf{a}$
\end_inset

, the instantaneous power delivered to the load is the Hadamard product
 of 
\begin_inset Formula $\mathbf{F}$
\end_inset

 and 
\begin_inset Formula $\mathbf{v}$
\end_inset

 
\begin_inset Formula 
\begin{equation}
\mathbf{P}=\mathbf{F}\circ\mathbf{v}=(m\mathbf{a})\circ\mathbf{v}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Because norms have the property with constant 
\begin_inset Formula $c$
\end_inset


\begin_inset Formula 
\begin{equation}
\|c\mathbf{x}\|_{p}=c\|\mathbf{x}\|_{p}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and mass is constant, the objective to minimize the norm of the power can
 be reduced to
\begin_inset Formula 
\begin{equation}
J=\|\mathbf{P}\|_{p}=m\|\mathbf{a}\circ\mathbf{v}\|_{p}\label{eq:power_norm}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Therefore, combining the optimization problem 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:baseProgram"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:power_norm"
plural "false"
caps "false"
noprefix "false"

\end_inset

 will yield minimization of the RMS power for 
\begin_inset Formula $p=2$
\end_inset

 and the peak power for 
\begin_inset Formula $p=\infty$
\end_inset

.
 This can be used to meet system requirements, such as motor driver specificatio
n.
 It is noted that using the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

-norm (i.e., 
\begin_inset Formula $p=1$
\end_inset

) of power as the cost function will also minimize the total energy of the
 movement.
 This can be shown by writing the total energy as the absolute sum of the
 instantaneous power multiplied by the constant time interval 
\begin_inset Formula $\Delta t$
\end_inset

 (assuming constant power between intervals) and then using the definition
 of the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

-norm: 
\begin_inset Formula 
\begin{equation}
E_{total}=\sum\limits _{i=1}^{n}|P_{i}\Delta t|=\sum\limits _{i=1}^{n}|P_{i}|\Delta t=\|\mathbf{P}\|_{1}\Delta t=m\|\mathbf{a}\circ\mathbf{v}\|_{1}\Delta t\label{eq:energy}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{remark}
\end_layout

\end_inset

 These costs functions can easily be extended to a time-varying mass if
 the mass-time profile is known 
\shape italic
a priori
\shape default
.
 The time-varying mass would effectively weight the entries of the power
 vector.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{remark}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{remark}
\end_layout

\end_inset

 The minimization of power produces a lower bound on the power the actuator
 must inject into the system.
 In a real system, one would also have to account for the system friction.
 To do this, it can be assumed that the friction has the form
\begin_inset Formula 
\begin{equation}
\mathbf{F}_{friction}=f(\mathbf{v})
\end{equation}

\end_inset

The total force to move the mass would be
\begin_inset Formula 
\begin{equation}
\mathbf{F}=f(\mathbf{v})+m\mathbf{a}
\end{equation}

\end_inset

whereby trajectory optimization would now reference the cost function
\begin_inset Formula 
\begin{equation}
J=\|(f(\mathbf{v})+m\mathbf{a})\circ\mathbf{v}\|_{p}
\end{equation}

\end_inset

to account for friction.
 Further discussion of this approach is out of the scope of this paper.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{remark}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimizing Move Time
\end_layout

\begin_layout Standard
In order to minimize the move time step, 
\begin_inset Formula $\Delta t$
\end_inset

 is added as a decision variable.
 The cost function becomes 
\begin_inset Formula 
\begin{equation}
J=N\Delta t
\end{equation}

\end_inset

where 
\begin_inset Formula $N$
\end_inset

 is again the number of time steps.
 It is important here to ensure that the time discretization factor 
\begin_inset Formula $N$
\end_inset

 is large enough to accurately capture the system dynamics throughout the
 range of 
\begin_inset Formula $\Delta t$
\end_inset

 encountered while solving the optimization problem.
 An easy way to do this would be to add side constraints to the permissible
 of 
\begin_inset Formula $\Delta t$
\end_inset

 into 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:kinematicConstraints"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and selecting a value of 
\begin_inset Formula $N$
\end_inset

 that is sufficient for the worst case.
 
\end_layout

\begin_layout Standard
In this cost function formulation, the distance constraint of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:baseProgram"
plural "false"
caps "false"
noprefix "false"

\end_inset

 must be reformulated as 
\begin_inset Formula 
\begin{equation}
\sum\limits _{k=1}^{N}v_{k}\Delta t=D
\end{equation}

\end_inset

which happens to be the product of two decision variables.
 As a consequence, a side effect of this formulation is the introduction
 of nonlinear constraint functions (the kinematic constraints 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:kinematicConstraints"
plural "false"
caps "false"
noprefix "false"

\end_inset

 also become nonlinear).
 These nonlinearities have downstream implications on the selection of appropria
te optimization algorithms for solving the move time minimization problem.
\end_layout

\begin_layout Section
IMPLEMENTATION NOTES
\begin_inset Note Note
status open

\begin_layout Plain Layout
Need to add more details about how the optimization problem was solved.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Implementation"

\end_inset


\end_layout

\begin_layout Standard
The use of algebraic modeling languages makes trajectory optimization programs
 such as those presented much more accessible to practicing engineers with
 limited knowledge of optimization solvers and nomenclature.
 With that said that are two aspects to note when implementing these programs
 in an AML package.
 For this paper, the above problems were implemented using Pyomo, for which
 the range of math functions that are available for the solvers is limited.
 For example, norms are not supported so additional decision variables,
 constraints, and cost function changes were required to complete the problem
 formulation.
 These adaptation are described here.
 The optimization code used in this paper is provided on GitHub at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

TBDsite
\end_layout

\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Rather than dumping code into an appendix, I suggest putting the code up
 on GitHub so that it is easily accessible.
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
I suggest just adding a note to the code examples themselves as to which
 python version was used.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Absolute Norm (
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

)
\end_layout

\begin_layout Standard
Introduce a new variable 
\begin_inset Formula $X_{k}$
\end_inset

 for each element in 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 For each new variable, implement the two-sided constraint 
\begin_inset Note Note
status open

\begin_layout Plain Layout
I'm confused by this.
 It seems backwards and that the +/-X should be bounding x?
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
-x_{k}\leq X_{k}\leq x_{k}\label{eq:1norm}
\end{equation}

\end_inset

The cost function becomes 
\begin_inset Formula 
\begin{equation}
J=\sum_{k=1}^{N}X_{k}
\end{equation}

\end_inset

Using these relationships in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:baseProgram"
plural "false"
caps "false"
noprefix "false"

\end_inset

 results in the following optimization program 
\begin_inset Formula 
\begin{align}
\begin{split}\min\limits _{\mathbf{d},\mathbf{v},\mathbf{a},\mathbf{j},\mathbf{X}}\quad & \sum\limits _{k=1}^{\infty}X_{k}\\
s.t.\quad & \mathcal{C}\\
 & X_{k}\leq x_{k}\\
 & X_{k}\geq-x_{k}
\end{split}
\end{align}

\end_inset

where 
\begin_inset Formula $\mathbf{x}$
\end_inset

 may be 
\begin_inset Formula $\mathbf{v}$
\end_inset

, 
\begin_inset Formula $\mathbf{a}$
\end_inset

, 
\begin_inset Formula $\mathbf{j}$
\end_inset

, or 
\begin_inset Formula $\mathbf{P}$
\end_inset

.
\end_layout

\begin_layout Subsection
RMS Norm (
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

)
\end_layout

\begin_layout Standard
Pyomo does not allow use of the square root function so a straight minimization
 of an RMS value is not possible.
 It can be shown, however, that minimizing the sum of squares is equivalent
 to minimizing the RMS value.
 This results in the following optimization program 
\begin_inset Formula 
\begin{align}
\begin{split}\min\limits _{\mathbf{d},\mathbf{v},\mathbf{a},\mathbf{j}}\quad & \sum\limits _{k=1}^{\infty}x_{k}^{2}\\
s.t.\quad & \mathcal{C}
\end{split}
\end{align}

\end_inset

where 
\begin_inset Formula $\mathbf{x}$
\end_inset

 may be 
\begin_inset Formula $\mathbf{v}$
\end_inset

, 
\begin_inset Formula $\mathbf{a}$
\end_inset

, 
\begin_inset Formula $\mathbf{j}$
\end_inset

, or 
\begin_inset Formula $\mathbf{P}$
\end_inset

.
\end_layout

\begin_layout Subsection
Peak Norm (
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

)
\end_layout

\begin_layout Standard
Introduce the same variables and constraints as in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:1norm"
plural "false"
caps "false"
noprefix "false"

\end_inset

 as well as a new variable 
\begin_inset Formula $\bar{X}$
\end_inset

.
 Add the following constraint for each variable, 
\begin_inset Formula $X_{k}$
\end_inset

 
\begin_inset Formula 
\begin{equation}
X_{k}\leq\bar{X}
\end{equation}

\end_inset

and the cost function becomes 
\begin_inset Formula 
\begin{equation}
J=\bar{X}
\end{equation}

\end_inset

The resulting optimization program is 
\begin_inset Formula 
\begin{align}
\begin{split}\min\limits _{\mathbf{d},\mathbf{v},\mathbf{a},\mathbf{j},\bar{X}}\quad & \bar{X}\\
s.t.\quad & \mathcal{C}\\
 & X_{k}\leq\bar{X}\\
 & X_{k}\leq x_{k}\\
 & X_{k}\geq-x_{k}
\end{split}
\end{align}

\end_inset

where 
\begin_inset Formula $\mathbf{x}$
\end_inset

 may be 
\begin_inset Formula $\mathbf{v}$
\end_inset

, 
\begin_inset Formula $\mathbf{a}$
\end_inset

, 
\begin_inset Formula $\mathbf{j}$
\end_inset

, or 
\begin_inset Formula $\mathbf{P}$
\end_inset

.
\end_layout

\begin_layout Subsection
Minimum Total Energy Formulation
\end_layout

\begin_layout Standard
To minimize the total energy of the move, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:energy"
plural "false"
caps "false"
noprefix "false"

\end_inset

 is used for the cost function.
 Since the mass 
\begin_inset Formula $m$
\end_inset

 and time step 
\begin_inset Formula $\Delta t$
\end_inset

 are considered constant here, this results in the following optimization
 program
\begin_inset Formula 
\begin{align}
\begin{split}\min\limits _{\mathbf{v},\,\mathbf{a},\,\mathbf{j}}\quad & m\Delta t\mathbf{a}^{T}\mathbf{v}\\
s.t.\quad & \mathcal{C}
\end{split}
\end{align}

\end_inset


\end_layout

\begin_layout Section
SINGLE-AXIS EXAMPLE AND RESULTS
\begin_inset CommandInset label
LatexCommand label
name "sec:SingleAxisResults"

\end_inset


\end_layout

\begin_layout Standard
To demonstrate the above trajectory optimization formulations, a realistic
 problem for a small single axis motion system is used.
 The set of system parameters and constraints are provided in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sysParams"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Trajectory optimization results are shown for minimizing velocity, acceleration
, jerk, power, and time.
 In the case of velocity minimization, two different bounds on the jerk
 were used to show the effects of the amount of jerk in the system.
 As explained previously, minimizing total energy is equivalent to minimizing
 the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

-norm of power, so this case is redundant.
 Peak power and energy usage minimization are compared between the different
 cases before exploring the relationship between the two in a multi-objective
 minimization problem.
 In all simulations the Generalized Disjunctive Programming optimizer was
 used (referenced as gdpopt within Pyomo 
\begin_inset CommandInset citation
LatexCommand cite
key "pyomogdpoptwebsite"
literal "false"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Need real ref
\end_layout

\end_inset

), although other optimizers also worked well on these problems.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
System parameters
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:sysParams"

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mass (
\begin_inset Formula $m$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 kg 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sampling frequency (
\begin_inset Formula $\Delta t$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.005 
\begin_inset Formula $s$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Final Time (
\begin_inset Formula $t_{f}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\begin_inset Formula $s$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum Velocity (
\begin_inset Formula $\bar{v}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5 
\begin_inset Formula $m/s$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum Acceleration (
\begin_inset Formula $\bar{a}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.905 
\begin_inset Formula $m/s^{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum Jerk (
\begin_inset Formula $\bar{j}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
98.1 
\begin_inset Formula $m/s^{3}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum Power (
\begin_inset Formula $\bar{P}$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100 
\begin_inset Formula $W$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimal Velocity
\end_layout

\begin_layout Standard
Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:min_v"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the minimum velocity trajectories for all norms studied using the
 nominal 
\begin_inset Formula $\bar{j}$
\end_inset

 and when 
\begin_inset Formula $\bar{j}$
\end_inset

 is 10 times higher than listed in Table
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:sysParams"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 For the nominal jerk allowable, the familiar S-curve trajectory results
 from the minimization of the 
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

 and 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norms.
 As the allowable jerk increase, these curves morph into the familiar trapezoida
l profile, with indistinguishable results when using the 
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

 and 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norms.
 Another result of interest here is that the trajectory produced by minimizing
 
\begin_inset Formula $\|v\|_{1}$
\end_inset

 uses less peak power.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/min_v_lowhigh.tex"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum velocity trajectories - nominal 
\begin_inset Formula $\bar{j}$
\end_inset

 (solid) and 10x 
\begin_inset Formula $\bar{j}$
\end_inset

 (dashed)
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:min_v"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
In the plots, it may be helpful to plot a dashed red line (or shaded regions
 or similar) to indicate constraint boundaries when they are within the
 frame.
 e.g., in these it would be for acceleration and jerk.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimal Acceleration and Jerk
\end_layout

\begin_layout Standard
Minimizing the acceleration across the 3 norms results in significantly
 different trajectory profiles.
 .
 The results shown in Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:min_a"
plural "false"
caps "false"
noprefix "false"

\end_inset

 demonstrate a parabolic velocity profile for minimization of the 
\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

 norm and a triangular profile for minimization of the 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norm.
 Minimization of the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

 norm of acceleration is similar to minimization of the 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norm of velocity, which is expected from the time derivative relationship
 between these variables.
 Fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:min_j"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows minimization of jerk using the three norms.
 In this the velocity profiles develop a range of bell shapes, nearing a
 triangle shape in the case of the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

 norm.
 of the system jerk and results in bell shaped velocity profiles.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/min_a.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum acceleration trajectories
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset CommandInset label
LatexCommand label
name "fig:min_a"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/min_j.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum jerk trajectories
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset CommandInset label
LatexCommand label
name "fig:min_j"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimal Power
\end_layout

\begin_layout Standard
Minimizing power results (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:min_p"
plural "false"
caps "false"
noprefix "false"

\end_inset

) in velocity profiles that are largely similar to those of acceleration
 minimization, while the other profiles are accentuated at the beginning
 and end of the motion.
 Interestingly, the overall peak power using the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

 norm is higher than that of several of the other cases, indicating that
 this cost function is not appropriate for power minimization.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Any insight as to why?
\end_layout

\end_inset

 Note, however, that the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

 norm this is also the minimum total energy solution, as was shown via 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:energy"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/min_p.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum power trajectories
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset CommandInset label
LatexCommand label
name "fig:min_p"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Minimal Time
\end_layout

\begin_layout Standard
The minimal time trajectory results in an S-curve velocity profile.
 In separate tests not shown, it was found that as the final time was manually
 reduced for any of the previously described optimization scenarios, the
 results converged to this same minimum time S-curve solution.
 This result can potentially be used to justify the specification of a different
 actuator that can meet requirements but will also be able to lower to total
 energy used in the motion.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/min_dt.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum time trajectory
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset CommandInset label
LatexCommand label
name "fig:min_t"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Total Energy and Peak Power Comparison
\end_layout

\begin_layout Standard
The generated trajectory profiles for the various optimization problems
 considered will naturally exhibit different total energy and peak power
 consumption characteristics that may further aid in the selection of the
 proper trajectory.
 A relative comparison of these values for the above cases is provided in
 Tables 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:energy"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:power"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The total energy was found via trapezoidal integration of the absolute
 value of the power.
 The results were divided by the best case over all combinations.
 It can be seen that, in general, minimizing the velocity resulted in the
 lowest energy required for the move, which makes sense as kinetic energy
 is proportional to the velocity squared.
 As expected per previous discussion, the minimization of the 
\begin_inset Formula $\mathcal{L}_{1}$
\end_inset

 norm of Power similarly achieves the minimum total energy mark.
 Minimal peak power, on the other hand, is generally reduced by minimizing
 the jerk or more directly so by minimizing the 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norm of the power.
 Simultaneous comparison of these tables illustrates the well-known tradeoff
 that must be considered between system specifications and performance requireme
nts.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Total energy relative to best case
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:energy"

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $v$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $j$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $E_{total}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{f}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.00
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.00
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.08
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.17
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.85
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.39
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{\infty}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.08
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.96
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Peak power relative to best case
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "tab:power"

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $v$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $j$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $E_{total}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{f}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.37
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.06
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.13
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.13
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.41
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.59
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.77
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\|\cdot\|_{\infty}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5.13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.06
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.33
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.00
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Multi-Objective Trajectory Optimization
\end_layout

\begin_layout Standard
Extension of the trajectory optimization framework to mixed optimization
 problems can be easily handled by modifying the cost function in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:baseProgram"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with the weighted multi-objective formulation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\begin{split} & \min\limits _{\mathbf{x}}\;\sum_{i}w_{i}J_{i}\\
s.t.\quad & \mathcal{C}\\
 & \sum_{i}w_{i}=1
\end{split}
\label{eq:multioptStatement}
\end{align}

\end_inset

where 
\begin_inset Formula $w_{i}$
\end_inset

 are weights for each of the 
\begin_inset Formula $J_{i}$
\end_inset

 cost functions.
 Equal weighting of total energy and peak power cost functions results in
 the motion profiles shown in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:multiobj_e_p"
plural "false"
caps "false"
noprefix "false"

\end_inset

, which exhibits a total energy 1.50 times greater and peak power 1.08 times
 greater than their respective optimal cases.
 Varying the cost function weights provides a means to extracting the multi-obje
ctive Pareto front, as shown in Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:pareto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 in which weights were varied from 0 to 1.
 Representing the range of possible solutions to this problem, at the extremes
 the Pareto front replicates the best and worst energy and power case results
 shown in Tables 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:energy"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:power"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 In between lies a trade space between the two cost functions where an engineer
 can find a motion profile that appropriately balances the needs of their
 particular system.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/multiobj_e_p.tex"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum mixed total energy-peak power objective trajectories – equal weighting
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:multiobj_e_p"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/pareto_ep.tex"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Minimum total energy-peak power Pareto front – normalized to axes minima
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:pareto"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
MULTI-AXIS TRAJECTORY OPTIMIZATION EXAMPLE
\end_layout

\begin_layout Standard
The trajectory optimization framework can be generalized to multi-axis problems
 by extension of the problem formulation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:baseProgram"
plural "false"
caps "false"
noprefix "false"

\end_inset

 with new kinematic variables and associated kinematic constraints 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:kinematicConstraints"
plural "false"
caps "false"
noprefix "false"

\end_inset

 for each moving body.
 Also necessary is the reformulation of the cost and objective function
 variables to include coupled effects of the system (e.g., staged motion and
 accompanying dynamics).
\end_layout

\begin_layout Standard
Here we demonstrate such an extension through and example of a two-link
 Selective Compliance Articulated Robotic Arm (SCARA).
 A SCARA consists of a fixed rotary joint rotating a link at the end of
 which another rotary joint/link pair is situated.
 In this example, it is clear that the kinematics of the endpoint of link
 2, as well as the joint torque and power requirements, are coupled and
 dependent on the relative motion of the two joints.
 Derivation of these relationships is straightforward using Lagrange's equations
 and will not be reproduced here.
\end_layout

\begin_layout Standard
To exercise this example, we define a trajectory generation problem for
 the SCARA starting at rest such that the tip velocity 
\begin_inset Formula $\left\langle v_{x}^{tip},v_{y}^{tip}\right\rangle $
\end_inset

 of the second link is equal to 
\begin_inset Formula $\left\langle 0,v_{f}^{tip}\right\rangle $
\end_inset

 at 
\begin_inset Formula $t_{f}$
\end_inset

 (as if it were throwing a baseball).
 We choose to formulate the tip velocities as constraints while the cost
 function minimizes the equally weighted peak power (
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset

 norm) of the two joint actuators.
 In this case we only care about hitting the velocity target at the end
 of motion, so the final position and acceleration constraints 
\begin_inset Formula $d_{N}$
\end_inset

 and 
\begin_inset Formula $a_{N}$
\end_inset

 are removed from the problem formulation.
 Note that this does not dictate the position or pose of the SCARA at the
 end of motion, only the tip velocity, so there may be many ways in which
 the end condition may manifest.
 An alternative formulation to this problem could instead add new constraint
 equations to enforce the tip velocity at an intermediate point in time.
\end_layout

\begin_layout Standard
The solution of this trajectory generation problem is shown through the
 following figures.
 Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SCARA_states"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the initial and final positions of the SCARA as well as traces of
 the tip positons, Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SCARA_trajectories"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the motion profiles of the two joint actuators, and Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:SCARA_tip_position-trajectories"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the trajectories the link tips.
 From the motion profiles it is clear that the position (limited to 
\begin_inset Formula $\pm\pi$
\end_inset

 radians) and jerk side constraints are being enforced at various points
 through the motion, while the peak power cost function manifests as a flattenin
g of the actuator power curves.
 An interesting outcome of this example is that the optimizer plans 
\begin_inset Quotes eld
\end_inset

wind-up
\begin_inset Quotes erd
\end_inset

 motion for the arm (much like a pitcher throwing a baseball), which it
 turns out is required in order to reach the tip velocities within the given
 joint position constraints (i.e., it is not possible to reach the tip speeds
 if only forward motion is allowed).
 The optimization code used for this example, along with specific link dimension
s and properties, is provided on GitHub at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

TBDsite
\end_layout

\end_inset

.
 Readers are encouraged to explore this example to better understand the
 relationship between the problem formulation, variables, and constraints.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/scara2.tex"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
SCARA in-plane motion with starting (solid) and ending (dashed) poses
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:SCARA_states"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/2link_trajectory.tex"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
SCARA motion profiles
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:SCARA_trajectories"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset CommandInset include
LatexCommand input
preview true
filename "figures/2link_tip_position_history_forpaper.tex"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
SCARA tip trajectories
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:SCARA_tip_position-trajectories"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
CONCLUSIONS AND FUTURE WORK
\begin_inset CommandInset label
LatexCommand label
name "sec:conclusions"

\end_inset


\end_layout

\begin_layout Standard
This paper provides a straight forward analysis tool for optimizing servo
 movement trajectories that motion systems engineers can use to tailor the
 performance of their systems.
 Multiple objectives were proposed to minimize different aspects of the
 trajectory profile.
 Results showed that minimization of the 
\shape italic

\begin_inset Formula $\mathcal{L}_{2}$
\end_inset

 and 
\begin_inset Formula $\mathcal{L}_{\infty}$
\end_inset


\shape default
-norms resulted in the traditional trapezoidal and S-curve profiles that
 are used in many off-the-shelf motion control systems.
 It was shown that trapezoidal profiles are the natural extension of S-curves
 when the allowable jerk in the system in increased.
 Also noted is that a trapezoidal profile is both the solution of the minimal
 time trajectory under motion rate constraints as well as for all other
 optimization problems considered when under a time constraint that approaches
 the minimal time.
 This suggests that the trapezoidal velocity profile is equivalent to the
 minimum move time profile given specific bounds.
 Further comparison of total energy and peak power between the results clearly
 demonstrate the trade off that must be considered with selection a motion
 profile.
\end_layout

\begin_layout Standard
A key distinction between the trajectory optimization formulation presented
 here and other optimization problem formulations of dynamic systems is
 the independence of the kinematic variables.
 Whereas in most other formulations the kinematics are constrained implicitly
 through the use of a time integration solver or algorithm (e.g., Runge-Kutta
 or forward Euler), here the kinematic variables are allowed to fall out
 of dynamic equilibrium within the context of the optimization program (i.e.,
 the kinematic constraints may not be satisfied for a given optimization
 iteration).
 This unique feature affords the present formulation with additional freedom
 to explore the optimal solution landscape by not being required to strictly
 follow the laws of physics every step of the way.
 It is only within the scope of the final solution that physical laws must
 be upheld, so it can be envisioned that this relaxation may bring algorithmic
 benefits in terms of improved solution convergence rate and avoidance of
 local minima, although these suppositions are not investigated here.
\end_layout

\begin_layout Standard
There exist many extensions and/or other use cases of this work, including:
\end_layout

\begin_layout Itemize
Adding friction - Including friction within trajectory optimization will
 enable improved power and energy estimates as well as the ability to derive
 system friction requirements from system performance specifications.
\end_layout

\begin_layout Itemize
Multi-objective/norm regularization - Exploring other cost function formulations
 that allow for more tailored trajectories to balance the trade offs between
 power, energy, and actuator limits.
\end_layout

\begin_layout Itemize
Complex profiles - Creating trajectories with varying bounds across the
 trajectory, thereby enabling optimization of complex profiles with specific
 movement requirements.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "references"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
